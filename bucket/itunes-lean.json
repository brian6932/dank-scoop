{
    "version": "20240506",
    "description": "This doesn't actually contain iTunes, instead it contains, Apple Application Support QuickTime AAC codecs, and Mobile Device Support drivers",
    "homepage": "https://www.apple.com/itunes/",
    "license": "Proprietary",
    "depends": "main/lessmsi",
    "notes": [
        "You'll probably want to create the following symlinks",
        "'Mobile Device', 'Apple Application' | ForEach-Object { $_ += ' Support'; New-Item -ItemType SymbolicLink -Target \"$(scoop prefix itunes-lean)/$_\" -Path \"/Program Files/Common Files/Apple/$_\" }"
    ],
    "architecture": {
        "64bit": {
            "url": "https://secure-appldnld.apple.com/itunes12/052-51516-20240506-351B8BFB-C5A7-4FD8-8262-60CD9FAA1464/iTunes64Setup.exe#/_.7z",
            "hash": "9cbaef01a8e2be6f4aa68768484268def7ca71491b71e56b435d4878da3232fd"
        },
        "32bit": {
            "url": "https://secure-appldnld.apple.com/itunes12/052-51519-20240506-10EAEE2C-0BF2-11EF-B073-701B25942342/iTunesSetup.exe#/_.7z",
            "hash": "145a32239b2da5048920f46367fdc672daa91c66cbfbff039678b0e878791d3f"
        }
    },
    "pre_install": "if (!$global) { Write-Host -Foreground Red \"$app should be installed globally.\"; break }",
    "post_install": [
        "using namespace System.Security.Cryptography.X509Certificates",
        "$arch = if ($architecture -ne '32bit') { '64' }",
        "$null = lessmsi.exe x \"$dir\\iTunes$arch.msi\" \"$dir\\\" ('ASL','CoreAudioToolbox','CoreFoundation','libdispatch','libicuin','libicuuc','objc','icudt62','msvcp140','vcruntime140' | ForEach-Object { $_+'.dll' })",
        "$SourceDir = \"$dir/SourceDir\"",
        "Move-Item (Get-ChildItem -File (Get-ChildItem $SourceDir).FullName).FullName (New-Item -ItemType Directory \"$dir/Apple Application Support\").FullName",
        "$mds = [string[]]::new(20)",
        "[sbyte]$i = -1",
        "'inf', 'cat', 'sys' | ForEach-Object { $mds[++$i] = \"usbaapl$arch.$_\" }",
        "'usbaaplrc','AppleMobileDeviceService_main','AppleVersions','ASL','CFNetwork','CoreFoundation','icudt62','libcache','libdispatch','libicuin','libicuuc','libxml2','MobileDevice','objc','pthreadVC2','SQLite3' | ForEach-Object { $mds[++$i] = $_+'.dll' }",
        "$mds[++$i] = 'AppleMobileDeviceService.exe'",
        "$null = lessmsi.exe x \"$dir\\AppleMobileDeviceSupport$arch.msi\" \"$dir\\\" $mds",
        "Move-Item \"$SourceDir/Common Files/Apple/Mobile Device Support/Drivers\" ($mds = \"$dir/Mobile Device Support\")",
        "Remove-Item -Recurse $SourceDir",
        "Remove-Item (Get-ChildItem -File \"$dir\").FullName -Recurse",
        "",
        "$cert = (Get-AuthenticodeSignature \"$mds/usbaapl$arch.cat\").SignerCertificate",
        "if (!(Get-ChildItem Cert:/CurrentUser/TrustedPublisher -Recurse | Where-Object { $_.Thumbprint -eq $cert.Thumbprint })) {",
        "    Write-Host 'Cert not found, adding to trusted store...'",
        "    $store = [X509Store]::new([StoreName]::TrustedPublisher, [StoreLocation]::LocalMachine)",
        "    $store.Open([OpenFlags]::ReadWrite)",
        "    $store.Add($cert.Export([X509ContentType]::Cert))",
        "    $store.Close()",
        "}",
        "",
        "Write-Host 'Installing driver...'",
        "$null = Invoke-ExternalCommand pnputil.exe -ArgumentList @('/add-driver', \"$mds/usbaapl$arch.inf\", '/install') -RunAs -ContinueExitCodes @{ 3010 = 'A system reboot is required to finalize the installation.' }"
    ],
    "pre_uninstall": [
        "if ($cmd -ne 'uninstall') { return }",
        "[Regex]::Matches((pnputil.exe /enum-devices), '(?m)Instance ID:\\s+(\\S+)\\sDevice Description:\\s+Apple Mobile Device USB Driver') | ForEach-Object {",
        "     $null = Invoke-ExternalCommand pnputil.exe -ArgumentList @('/remove-device', $_.Groups[1].Value) -RunAs -ContinueExitCodes @{ 3010 = 'A system reboot is required to finalize the uninstallation.' }",
        "}",
        "$null = pnputil.exe /remove-driver \"$dir\\Mobile Device Support\\usbaapl$(if ($architecture -ne '32') { '64' }).inf\""
    ],
    "checkver": {
        "script": [
            "('64', '32' | ForEach-Object {",
            "    $_ = [Net.HttpWebRequest]::Create(\"https://www.apple.com/itunes/download/win$_\")",
            "    $_.Method = 'head'",
            "    $_.GetResponse().ResponseUri.Segments[-2]",
            "}) -join ''"
        ],
        "regex": "\\A(?<64>\\d{3}-\\d{5}-(\\d{8})-[A-F\\d]{8}(?:-[A-F\\d]{4}){3}-[A-F\\d]{12})/(?<32>\\d{3}-\\d{5}-\\d{8}-[A-F\\d]{8}(?:-[A-F\\d]{4}){3}-[A-F\\d]{12})/\\Z"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://secure-appldnld.apple.com/itunes12/$match64/iTunes64Setup.exe#/_.7z"
            },
            "32bit": {
                "url": "https://secure-appldnld.apple.com/itunes12/$match32/iTunesSetup.exe#/_.7z"
            }
        }
    }
}
